name: Android App Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build_profile:
        description: 'EAS build profile'
        required: true
        default: 'development'
        type: choice
        options:
        - development
        - preview
        - production

env:
  NODE_VERSION: '18'
  JAVA_VERSION: '17'

jobs:
  build-android:
    name: Build Android App
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🐧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          # 不使用 yarn 缓存，让 corepack 管理

      - name: 🔧 Enable Corepack and Setup Yarn
        run: |
          # 启用 Corepack
          corepack enable
          # 设置正确的 Yarn 版本（与 package.json 一致）
          yarn set version 4.9.1
          # 验证版本
          yarn --version
          # 清理缓存
          yarn cache clean --all

      - name: 🐘 Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'gradle'

      - name: 📦 Install dependencies
        run: |
          # 验证 Yarn 版本
          yarn --version
          # 安装依赖
          yarn install --frozen-lockfile

      - name: 🔧 Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: 📋 Generate database schema
        run: |
          npx drizzle-kit generate
          yarn run prebuild

      - name: 🔧 Setup environment for EAS build
        run: |
          # 创建环境变量文件
          if [ "${{ github.event.inputs.build_profile || 'development' }}" == "production" ]; then
            echo "ENVIRONMENT=production" >> .env
          else
            echo "ENVIRONMENT=development" >> .env
          fi

      - name: 🏗️ Build Android App with EAS
        run: |
          eas build --platform android --profile ${{ github.event.inputs.build_profile || 'development' }} --non-interactive --clear-cache
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: 📤 Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-app-${{ github.event.inputs.build_profile || 'development' }}
          path: |
            *.apk
            *.aab
          retention-days: 7

  # 代码质量检查
  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 🔧 Enable Corepack and Setup Yarn
        run: |
          corepack enable
          yarn set version 4.9.1
          yarn --version
          yarn cache clean --all

      - name: 📦 Install dependencies
        run: |
          yarn --version
          yarn install --frozen-lockfile

      - name: 🔍 Run linting
        run: |
          yarn lint
          yarn check

      - name: 🧪 Run tests
        run: yarn test
        continue-on-error: true

      - name: 🌐 Check i18n
        run: |
          yarn check:i18n
          yarn sync:i18n

  # 构建状态汇总
  build-summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [build-android, code-quality]
    if: always()
    
    steps:
      - name: 📊 Generate build summary
        run: |
          echo "## 📱 Android Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Build Android | ${{ needs.build-android.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Code Quality | ${{ needs.code-quality.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.build-android.result }}" == "success" ]; then
            echo "✅ **Build completed successfully!**" >> $GITHUB_STEP_SUMMARY
            echo "- Check the artifacts section below to download the APK/AAB" >> $GITHUB_STEP_SUMMARY
            echo "- Build profile: ${{ github.event.inputs.build_profile || 'development' }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Build failed!**" >> $GITHUB_STEP_SUMMARY
            echo "- Check the build logs for errors" >> $GITHUB_STEP_SUMMARY
          fi
